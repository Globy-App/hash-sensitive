name: CQ

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

permissions:
  contents: read

jobs:
  code-quality:
    name: Coding standards, code quality and static code analysis
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.2', '8.3', '8.4']

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run the linter
      run: php ./vendor/bin/php-cs-fixer fix src --dry-run --allow-risky=yes

    - name: Run PHPStan
      if: success() || failure()
      run: php -d memory_limit=1G ./vendor/bin/phpstan analyse -c phpstan.neon --error-format=github > phpstan.json

    - name: Run psalm
      if: success() || failure()
      run: php ./vendor/bin/psalm --output-format=github

  integration-tests:
    name: Test suite and coverage
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.2', '8.3', '8.4']

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov
          extensions: dom

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run test suite
        run: |
          php ./vendor/bin/pest --coverage --min=100 --coverage-clover=coverage.xml --coverage-xml=logs/coverage --log-junit=logs/coverage.junit.xml

      - name: Run infection mutation testing
        run:
          php ./vendor/bin/infection --min-msi=90 --min-covered-msi=95 --threads=max --no-interaction --logger-github=true --skip-initial-tests --coverage=logs


